<?php

namespace Application\Controller;

use Test\Bootstrap;
use Zend\Mvc\Router\Http\TreeRouteStack as HttpRouter;
use Application\Controller\IndexController;
use Zend\Http\Request;
use Zend\Http\Response;
use Zend\Mvc\MvcEvent;
use Zend\Mvc\Router\RouteMatch;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-08 at 21:22:46.
 */
class OwnerControllerTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var OwnerController
     */
    protected $object;
    protected $controller;
    protected $request;
    protected $response;
    protected $routeMatch;
    protected $event;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new OwnerController;
        $serviceManager = Bootstrap::getServiceManager();
        $this->controller = new OwnerController();
        $this->request    = new Request();
        $this->routeMatch = new RouteMatch(array('controller' => 'index'));
        $this->event      = new MvcEvent();
        $config = $serviceManager->get('Config');
        $routerConfig = isset($config['router']) ? $config['router'] : array();
        $router = HttpRouter::factory($routerConfig);

        $this->event->setRouter($router);
        $this->event->setRouteMatch($this->routeMatch);
        $this->controller->setEvent($this->event);
        $this->controller->setServiceLocator($serviceManager);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * @covers Application\Controller\OwnerController::setEntityManager
     */
    public function testSetEntityManager()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
//        $serviceManager = Bootstrap::getServiceManager();
//        $this->assertEquals($this->controller, $this->controller->setEntityManager($serviceManager->get('Doctrine\ORM\EntityManager')));
    }

    /**
     * @covers Application\Controller\OwnerController::getEntityManager
     * @todo   Implement testGetEntityManager().
     */
    public function testGetEntityManager()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
        //$this->assertInstanceOf('Doctrine\ORM\EntityManager', $this->controller->getEntityManager());
    }

    /**
     * @covers Application\Controller\OwnerController::indexAction
     */
    public function testIndexActionCanBeAccessed()
    {
        $this->routeMatch->setParam('action', 'index');

        $result   = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();

        $this->assertEquals(200, $response->getStatusCode());
    }

    /**
     * @covers Application\Controller\OwnerController::indexAction
     * @todo   Implement testIndexAction().
     */
    public function testIndexAction() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Application\Controller\OwnerController::listAction
     * @todo   Implement testListAction().
     */
    public function testListAction() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Application\Controller\OwnerController::addAction
     */
    public function testAddActionCanBeAccessed()
    {
        $this->routeMatch->setParam('action', 'add');

        $result   = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();

        $this->assertEquals(200, $response->getStatusCode());
    }

    /**
     * @covers Application\Controller\OwnerController::addAction
     * @todo   Implement testAddAction().
     */
    public function testAddAction() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Application\Controller\OwnerController::editAction
     * @todo   Implement testEditAction().
     */
    public function testEditAction() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Application\Controller\OwnerController::deleteAction
     * @todo   Implement testDeleteAction().
     */
    public function testDeleteAction() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Application\Controller\OwnerController::viewAction
     * @todo   Implement testViewAction().
     */
    public function testViewAction() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}
