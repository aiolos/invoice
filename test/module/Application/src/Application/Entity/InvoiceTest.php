<?php

namespace Application\Entity;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-08 at 19:51:12.
 */
class InvoiceTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Invoice
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Invoice;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * @covers Application\Entity\Invoice::__Construct
     */
    public function test__Construct()
    {
        $owner = new \Application\Entity\Owner();
        $object = new \Application\Entity\Invoice();
        $this->assertNull($object->getOwner());
        $object = new \Application\Entity\Invoice($owner);
        $this->assertEquals($owner, $object->getOwner());
    }

    /**
     * @covers Application\Entity\Invoice::getId
     */
    public function testGetId()
    {
        $id = 1;
        $this->assertNull($this->object->getId());
        $this->object->setId($id);
        $this->assertEquals($id, $this->object->getId());
    }

    /**
     * @covers Application\Entity\Invoice::setId
     */
    public function testSetId()
    {
        $this->assertEquals($this->object, $this->object->setId(1));
    }

    /**
     * @covers Application\Entity\Invoice::getYear
     */
    public function testGetYear()
    {
        $year = 2013;
        $this->assertNull($this->object->getYear());
        $this->object->setYear($year);
        $this->assertEquals($year, $this->object->getYear());
    }

    /**
     * @covers Application\Entity\Invoice::setYear
     */
    public function testSetYear()
    {
        $this->assertEquals($this->object, $this->object->setYear(2013));
    }

    /**
     * @covers Application\Entity\Invoice::getOwner
     */
    public function testGetOwner()
    {
        $owner = new \Application\Entity\Owner();
        $this->assertNull($this->object->getOwner());
        $this->object->setOwner($owner);
        $this->assertEquals($owner, $this->object->getOwner());
    }

    /**
     * @covers Application\Entity\Invoice::setOwner
     */
    public function testSetOwner()
    {
        $owner = new \Application\Entity\Owner();
        $this->assertEquals($this->object, $this->object->setOwner($owner));
    }

    /**
     * @covers Application\Entity\Invoice::getFilename
     */
    public function testGetFilename()
    {
        $filename = 'bestandsnaam.pdf';
        $this->assertNull($this->object->getFilename());
        $this->object->setFilename($filename);
        $this->assertEquals($filename, $this->object->getFilename());
    }

    /**
     * @covers Application\Entity\Invoice::setFilename
     */
    public function testSetFilename()
    {
        $this->assertEquals($this->object, $this->object->setFilename('test.pdf'));
    }

    /**
     * @covers Application\Entity\Invoice::getCreatedAt
     */
    public function testGetCreatedAt()
    {
        $this->assertNull($this->object->getCreatedAt());
    }

    /**
     * @covers Application\Entity\Invoice::getUpdatedAt
     */
    public function testGetUpdatedAt()
    {
        $this->assertNull($this->object->getUpdatedAt());
    }

    /**
     * @covers Application\Entity\Invoice::prePersist
     */
    public function testPrePersist()
    {
        $this->assertNull($this->object->getCreatedAt());
        $this->object->prePersist();
        $this->assertInstanceOf('DateTime', $this->object->getCreatedAt());
    }

    /**
     * @covers Application\Entity\Invoice::preUpdate
     */
    public function testPreUpdate()
    {
        $this->assertNull($this->object->getUpdatedAt());
        $this->object->preUpdate();
        $this->assertInstanceOf('DateTime', $this->object->getUpdatedAt());
    }
}
