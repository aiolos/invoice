<?php

namespace Application\Entity;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-08 at 20:40:39.
 */
class ObjecttypeTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Objecttype
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Objecttype;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * @covers Application\Entity\Objecttype::getId
     */
    public function testGetId()
    {
        $id = 1;
        $this->assertNull($this->object->getId());
        $this->object->setId($id);
        $this->assertEquals($id, $this->object->getId());
    }

    /**
     * @covers Application\Entity\Objecttype::setId
     */
    public function testSetId()
    {
        $this->assertEquals($this->object, $this->object->setId(1));
    }

    /**
     * @covers Application\Entity\Objecttype::getName
     */
    public function testGetName()
    {
        $name = 'Alpha';
        $this->assertNull($this->object->getName());
        $this->object->setName($name);
        $this->assertEquals($name, $this->object->getName());
    }

    /**
     * @covers Application\Entity\Objecttype::setName
     */
    public function testSetName()
    {
        $this->assertEquals($this->object, $this->object->setName('naam'));
    }

    /**
     * @covers Application\Entity\Objecttype::getPrices
     * @todo   Implement testGetPrices().
     */
    public function testGetPrices()
    {
        $price = new \Application\Entity\Price();
        $arrayCollection = new \Doctrine\Common\Collections\ArrayCollection();
        $this->assertEquals($arrayCollection, $this->object->getPrices());
        $arrayCollection[] = $price;
        $this->object->addPrice($price);
        $this->assertEquals($arrayCollection, $this->object->getPrices());
    }

    /**
     * @covers Application\Entity\Objecttype::addPrice
     * @todo   Implement testAddPrice().
     */
    public function testAddPrice()
    {
        $price = new \Application\Entity\Price();
        $this->assertEquals($this->object, $this->object->addPrice($price));
    }

    /**
     * @covers Application\Entity\Objecttype::getCurrentPrice
     */
    public function testGetCurrentPrice()
    {
        $price2014 = new \Application\Entity\Price();
        $price2014->setYear(2014)->setPrice(100)->setUnit('jaar');
        $this->object->addPrice($price2014);
        $price2013 = new \Application\Entity\Price();
        $price2013->setYear(2013)->setPrice(99)->setUnit('jaar');
        $this->object->addPrice($price2013);
        $price2012 = new \Application\Entity\Price();
        $price2012->setYear(2012)->setPrice(49)->setUnit('jaar');
        $this->object->addPrice($price2012);
        $this->assertEquals($price2013, $this->object->getCurrentPrice());
    }

    /**
     * @covers Application\Entity\Objecttype::exchangeArray
     * @todo   Implement testExchangeArray().
     */
    public function testExchangeArray()
    {
        $data = array(
            'name' => 'een naam',
            'id' => 123,
        );
        $this->object->exchangeArray($data);

        $this->assertEquals($data['name'], $this->object->getName());
        $this->assertEquals($data['id'], $this->object->getId());
    }

    /**
     * @covers Application\Entity\Objecttype::getArrayCopy
     */
    public function testGetArrayCopy()
    {
        $id = 123;
        $this->object->setId($id);

        $data = $this->object->getArrayCopy();
        $this->assertEquals($data['id'], $id);
    }

    /**
     * @covers Application\Entity\Objecttype::setInputFilter
     */
    public function testSetInputFilter()
    {
        $this->setExpectedException('Exception');
        $inputFilter = new \Zend\InputFilter\InputFilter;
        $this->object->setInputFilter($inputFilter);
    }

    /**
     * @covers Application\Entity\Objecttype::getInputFilter
     */
    public function testGetInputFilter()
    {
        $this->assertInstanceOf('Zend\InputFilter\InputFilter', $this->object->getInputFilter());
    }

}
