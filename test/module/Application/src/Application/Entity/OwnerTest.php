<?php

namespace Application\Entity;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-07-28 at 23:17:51.
 */
class OwnerTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Owner
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Owner();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * @covers Application\Entity\Owner::getId
     */
    public function testGetId()
    {
        $id = 1;
        $this->assertNull($this->object->getId());
        $this->object->setId($id);
        $this->assertEquals($id, $this->object->getId());
    }

    /**
     * @covers Application\Entity\Owner::setId
     */
    public function testSetId()
    {
        $this->assertEquals($this->object, $this->object->setId(1));
    }

    /**
     * @covers Application\Entity\Owner::getInitials
     * @todo   Implement testGetInitials().
     */
    public function testGetInitials()
    {
        $initials = 'A.B.';
        $this->assertNull($this->object->getInitials());
        $this->object->setInitials($initials);
        $this->assertEquals($initials, $this->object->getInitials());
    }

    /**
     * @covers Application\Entity\Owner::setInitials
     * @todo   Implement testSetInitials().
     */
    public function testSetInitials() {
        $this->assertEquals($this->object, $this->object->setInitials('H.W.'));
    }

    /**
     * @covers Application\Entity\Owner::getName
     * @todo   Implement testGetName().
     */
    public function testGetName()
    {
        $name = 'Alpha';
        $this->assertNull($this->object->getName());
        $this->object->setName($name);
        $this->assertEquals($name, $this->object->getName());
    }

    /**
     * @covers Application\Entity\Owner::setName
     * @todo   Implement testSetName().
     */
    public function testSetName()
    {
        $this->assertEquals($this->object, $this->object->setName('naam'));
    }

    /**
     * @covers Application\Entity\Owner::getGender
     * @todo   Implement testGetGender().
     */
    public function testGetGender()
    {
        $value = 'M';
        $this->assertNull($this->object->getGender());
        $this->object->setGender($value);
        $this->assertEquals($value, $this->object->getGender());
    }

    /**
     * @covers Application\Entity\Owner::setGender
     * @todo   Implement testSetGender().
     */
    public function testSetGender()
    {
        $this->assertEquals($this->object, $this->object->setGender('M'));
    }

    /**
     * @covers Application\Entity\Owner::getStreet
     * @todo   Implement testGetStreet().
     */
    public function testGetStreet()
    {
        $value = 'straatnaam';
        $this->assertNull($this->object->getStreet());
        $this->object->setStreet($value);
        $this->assertEquals($value, $this->object->getStreet());
    }

    /**
     * @covers Application\Entity\Owner::setStreet
     * @todo   Implement testSetStreet().
     */
    public function testSetStreet()
    {
        $this->assertEquals($this->object, $this->object->setStreet('Straatnaam'));
    }

    /**
     * @covers Application\Entity\Owner::getHousenumber
     * @todo   Implement testGetHousenumber().
     */
    public function testGetHousenumber()
    {
        $value = '123';
        $this->assertNull($this->object->getHousenumber());
        $this->object->setHousenumber($value);
        $this->assertEquals($value, $this->object->getHousenumber());
    }

    /**
     * @covers Application\Entity\Owner::setHousenumber
     * @todo   Implement testSetHousenumber().
     */
    public function testSetHousenumber()
    {
        $this->assertEquals($this->object, $this->object->setHousenumber('123'));
    }

    /**
     * @covers Application\Entity\Owner::getPostalcode
     * @todo   Implement testGetPostalcode().
     */
    public function testGetPostalcode()
    {
        $value = '8251PT';
        $this->assertNull($this->object->getPostalcode());
        $this->object->setPostalcode($value);
        $this->assertEquals($value, $this->object->getPostalcode());
    }

    /**
     * @covers Application\Entity\Owner::setPostalcode
     * @todo   Implement testSetPostalcode().
     */
    public function testSetPostalcode()
    {
        $this->assertEquals($this->object, $this->object->setPostalcode('8084PL'));
    }

    /**
     * @covers Application\Entity\Owner::getCity
     * @todo   Implement testGetCity().
     */
    public function testGetCity()
    {
        $value = 'Plaats';
        $this->assertNull($this->object->getCity());
        $this->object->setCity($value);
        $this->assertEquals($value, $this->object->getCity());
    }

    /**
     * @covers Application\Entity\Owner::setCity
     * @todo   Implement testSetCity().
     */
    public function testSetCity()
    {
        $this->assertEquals($this->object, $this->object->setCity('Stad'));
    }

    /**
     * @covers Application\Entity\Owner::getCountry
     * @todo   Implement testGetCountry().
     */
    public function testGetCountry()
    {
        $value = 'NL';
        $this->assertNull($this->object->getCountry());
        $this->object->setCountry($value);
        $this->assertEquals($value, $this->object->getCountry());
    }

    /**
     * @covers Application\Entity\Owner::setCountry
     * @todo   Implement testSetCountry().
     */
    public function testSetCountry()
    {
        $this->assertEquals($this->object, $this->object->setCountry('NL'));
    }

    /**
     * @covers Application\Entity\Owner::getLanguage
     * @todo   Implement testGetLanguage().
     */
    public function testGetLanguage()
    {
        $value = 'NL';
        $this->assertNull($this->object->getLanguage());
        $this->object->setLanguage($value);
        $this->assertEquals($value, $this->object->getLanguage());
    }

    /**
     * @covers Application\Entity\Owner::setLanguage
     * @todo   Implement testSetLanguage().
     */
    public function testSetLanguage()
    {
        $this->assertEquals($this->object, $this->object->setLanguage('NL'));
    }

    /**
     * @covers Application\Entity\Owner::getEmail
     * @todo   Implement testGetEmail().
     */
    public function testGetEmail()
    {
        $value = 'email@adres.nl';
        $this->assertNull($this->object->getEmail());
        $this->object->setEmail($value);
        $this->assertEquals($value, $this->object->getEmail());
    }

    /**
     * @covers Application\Entity\Owner::setEmail
     * @todo   Implement testSetEmail().
     */
    public function testSetEmail()
    {
        $this->assertEquals($this->object, $this->object->setEmail('info@iets.nu'));
    }

    /**
     * @covers Application\Entity\Owner::getTelephone
     * @todo   Implement testGetTelephone().
     */
    public function testGetTelephone()
    {
        $value = '+43456987';
        $this->assertNull($this->object->getTelephone());
        $this->object->setTelephone($value);
        $this->assertEquals($value, $this->object->getTelephone());
    }

    /**
     * @covers Application\Entity\Owner::setTelephone
     * @todo   Implement testSetTelephone().
     */
    public function testSetTelephone()
    {
        $this->assertEquals($this->object, $this->object->setTelephone('06-12345678'));
    }

    /**
     * @covers Application\Entity\Owner::getShipname
     * @todo   Implement testGetShipname().
     */
    public function testGetShipname()
    {
        $value = 'Scheepsnaam';
        $this->assertNull($this->object->getShipname());
        $this->object->setShipname($value);
        $this->assertEquals($value, $this->object->getShipname());
    }

    /**
     * @covers Application\Entity\Owner::setShipname
     * @todo   Implement testSetShipname().
     */
    public function testSetShipname()
    {
        $this->assertEquals($this->object, $this->object->setShipname('De Boot'));
    }

    /**
     * @covers Application\Entity\Owner::getDebinr
     * @todo   Implement testGetDebinr().
     */
    public function testGetDebinr()
    {
        $value = '1234';
        $this->assertNull($this->object->getDebinr());
        $this->object->setDebinr($value);
        $this->assertEquals($value, $this->object->getDebinr());
    }

    /**
     * @covers Application\Entity\Owner::addObjectownerships
     */
    public function testAddObjectownerships()
    {
        $value = new \Application\Entity\Objectownership();
        $this->assertEquals($this->object, $this->object->addObjectownerships($value));
    }

    /**
     * @covers Application\Entity\Owner::getObjectownerships
     */
    public function testGetObjectownerships()
    {
        $value = new \Application\Entity\Objectownership();
        $arrayCollection = new \Doctrine\Common\Collections\ArrayCollection();
        $this->assertEquals($arrayCollection, $this->object->getObjectownerships());
        $arrayCollection[] = $value;
        $this->object->addObjectownerships($value);
        $this->assertEquals($arrayCollection, $this->object->getObjectownerships());
    }

    /**
     * @covers Application\Entity\Owner::addInvoices
     */
    public function testAddInvoices()
    {
        $value = new \Application\Entity\Invoice();
        $this->assertEquals($this->object, $this->object->addInvoices($value));
    }

    /**
     * @covers Application\Entity\Owner::getInvoices
     */
    public function testGetInvoices()
    {
        $value = new \Application\Entity\Invoice();
        $arrayCollection = new \Doctrine\Common\Collections\ArrayCollection();
        $this->assertEquals($arrayCollection, $this->object->getInvoices());
        $arrayCollection[] = $value;
        $this->object->addInvoices($value);
        $this->assertEquals($arrayCollection, $this->object->getInvoices());
    }

    /**
     * @covers Application\Entity\Owner::setDebinr
     * @todo   Implement testSetDebinr().
     */
    public function testSetDebinr()
    {
        $this->assertEquals($this->object, $this->object->setDebinr('123'));
    }

    /**
     * @covers Application\Entity\Owner::populate
     * @todo   Implement testExchangeArray().
     */
    public function testPopulate()
    {
        $data = array(
            'id' => 1,
            'name' => 'een naam',
            'initials' => 'A.B.',
            'gender' => 'M',
            'shipname' => 'F830',
            'city' => 'stad',
            'country' => 'NL',
            'debinr' => '1234',
            'email' => 'email@example.com',
            'housenumber' => 1,
            'language' => 'nl',
            'postalcode' => '8251PT',
            'street' => 'Straatweg',
            'telephone' => '0612345678',
        );
        $this->object->populate($data);

        $this->assertEquals($data['id'], $this->object->getId());
        $this->assertEquals($data['name'], $this->object->getName());
        $this->assertEquals($data['initials'], $this->object->getInitials());
    }

    /**
     * @covers Application\Entity\Owner::getArrayCopy
     * @todo   Implement testGetArrayCopy().
     */
    public function testGetArrayCopy()
    {
        $id = 123;
        $this->object->setId($id);

        $data = $this->object->getArrayCopy();
        $this->assertEquals($data['id'], $id);
    }

    /**
     * @covers Application\Entity\Owner::setInputFilter
     * @todo   Implement testSetInputFilter().
     */
    public function testSetInputFilter()
    {
        $this->setExpectedException('Exception');
        $inputFilter = new \Zend\InputFilter\InputFilter;
        $this->object->setInputFilter($inputFilter);
    }

    /**
     * @covers Application\Entity\Owner::getInputFilter
     * @todo   Implement testGetInputFilter().
     */
    public function testGetInputFilter()
    {
        $this->assertInstanceOf('Zend\InputFilter\InputFilter', $this->object->getInputFilter());
    }

}
